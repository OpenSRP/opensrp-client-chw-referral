// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'
apply plugin: 'io.codearte.nexus-staging'

jacoco {
    toolVersion = "0.8.5"
}

project.ext.preDexLibs = !project.hasProperty('disablePreDex')

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url 'https://jitpack.io' }
        maven { url "http://acra.googlecode.com/svn/repository/releases" }
        maven { url "https://repo.maven.apache.org/maven2" }
        maven { url "http://cloudant.github.io/cloudant-sync-eap/repository" }
        maven { url "https://s3.amazonaws.com/repo.commonsware.com" }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
}
subprojects {
    ext.androidBuildToolsVersion = '28.0.3'
    // Improve build server performance by allowing disabling of pre-dexing
    // (see http://tools.android.com/tech-docs/new-build-system/tips#TOC-Improving-Build-Server-performance.)
    project.plugins.whenPluginAdded { plugin ->
        if("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}

configure(allprojects) { project ->

    version = VERSION_NAME
    group = GROUP
    buildscript {
        repositories {
            google()
            jcenter()
            mavenCentral()
            maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
            mavenLocal()
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}
